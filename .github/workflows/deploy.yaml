name: "MERN CI-CD deploy file"

on:
  pull_request:
    branches:
      - main

jobs:
  docker_build:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 2: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 3: Set up Docker Buildx
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Step 4: Build frontend Docker image
    - name: Build frontend Docker image
      run: |
        docker build -f frontend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/frontend_image ./frontend

    # Step 5: Build backend Docker image
    - name: Build backend Docker image
      run: |
        docker build -f backend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/backend_image ./backend

    # Step 6: Push frontend Docker image
    - name: Push frontend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend_image

    # Step 7: Push backend Docker image
    - name: Push backend Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/backend_image

  deploy_to_kubernetes:
    runs-on: ubuntu-latest
    needs: docker_build

    steps:
    # Step 1: Checkout code again to access k8s folder
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Kubernetes credentials using secrets
    - name: Set up Kubernetes
      env:
        KUBERNETES_SERVER_URL: ${{ secrets.KUBERNETES_SERVER_URL }}
        KUBERNETES_TOKEN: ${{ secrets.KUBERNETES_TOKEN }}
        KUBERNETES_CA_CERT: ${{ secrets.KUBERNETES_CA_CERT }}
      run: |
        echo "$KUBERNETES_CA_CERT" | base64 --decode > ~/.kube/ca.crt
        kubectl config set-cluster my-cluster \
          --server=$KUBERNETES_SERVER_URL \
          --certificate-authority=~/.kube/ca.crt
        kubectl config set-credentials deployer --token=$KUBERNETES_TOKEN
        kubectl config set-context my-cluster-context --cluster=my-cluster --user=deployer
        kubectl config use-context my-cluster-context

    # Step 3: Deploy to Kubernetes (apply the deployment and service YAML files)
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
